app: {
  name: "Container per user manager"
  port: 3003
  secret: "theTreeInFront"
  localOverride: "/localoverride"
  maxErrorQueue: 10
  redisTimeout: 3600
  resolveCacheTtlMaxMs: 30000
  resolveCacheNMax: 30000
  pageReloadTime: 5
  frontendAddr: "http://127.0.0.1:4200"
  baseUri: "http://127.0.0.1"
  catchErrors: false
  templatesDir: "{{baseDir}}/kubeTemplates"
  baseReplacements: {
    nomadRoot: "/nomad/nomadlab"
  }
}
mongoDb: {
  url: "mongodb://notebook-info-db-mongodb/filedatabase"
}
session_redis: {
  port: 6379
  host: "analytics-session-db-redis-master"
}
usersettings_redis: {
  port: 6379
  host: "user-settings-db-redis-master"
}
k8Api: {
  url: "https://labdev3-nomad.esc.rzg.mpg.de:6443"
  node: "labdev3-nomad.esc.rzg.mpg.de"
  ca: "kube-certs/ca.crt"
  cert: "kube-certs/client.crt"
  key: "kube-certs/client.key"
}
passport: {
  strategy: "saml"
  saml: {
    path: "/login/callback"
    entryPoint: "https://idp.nomad-coe.eu/idp/profile/SAML2/Redirect/SSO"
    issuer: "https://labdev-nomad.esc.rzg.mpg.de/shibboleth"
    identifierFormat: null
    acceptedClockSkewMs: -1
  }
},
k8component: {
  templateCacheNMax: 20
  templateCacheTtlMaxMs: 30000
  namespace: "analytics"
  templatePath: "defaultTemplate.yaml"
  keysToProtect: ["keysToProtect", "keysToSkip"]
  keysToSkip: ["templateCacheTtlMaxMs", "templateCacheNMax", "keysToSkip", "keysToProtect", "images", "entryPoint", "commands"]
  image: {
    imageType: beaker
    imageSubtype: default
    keysToProtect: ["imageType", "imageReStr"]
    imageReStr: "^(labdev-nomad\\.esc\\.rzg\\.mpg.de|analytics-toolkit\\.nomad-coe\\.eu)(:[0-9]+)?/([-a-z0-9]*)/([-a-z0-9]*(:[a-z.-])$"
    image: ""
    port: 8801
    prefix: "/beaker"
    homePath: "/home/beaker"
    autoRestart: true
    healthPath: "/"
    healthDelay: 2
    healthPeriod: 10
    livePath: "/"
    liveDelay: 2
    livePeriod: 30
  }
  entryPoint: {
    path: "/notebook-edit/*"
    uriRe: "/notebook-edit(/.*)"
    redirectTarget: "{{baseUri}}/beaker/#/open?uri={{escapedPath1}}"
    exclusiveStartPoint: false
  }
  commands: {
    path: "{{baseUriPath}}/nomad-commands"
  }
}
userInfo: {
  demoToWatch: "/nomad/nomadlab/demos"
  basePathToWatch: "/nomad/nomadlab/user-data",
  privateDir: "/nomad/nomadlab/user-data/private",
  sharedDir: "/nomad/nomadlab/user-data/shared",
  privateDirInContainer: "/data/private",
  sharedDirInContainer: "/data/shared",
  mySharedDirInContainer: "/data/my-shared"
}
